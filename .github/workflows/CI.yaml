name: CI

on:
  push: null
  pull_request: null

jobs:
  running_tests:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"
    name: TESTS
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    outputs:
      tests_passed: ${{ steps.test_outcome.outcome == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: mongo-svc
        uses: art049/mongodb-cluster-action@v0
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade -r app/requirements.txt
          pip install pytest
      - name: Run the application
        run: |
          cd app
          export FLASK_APP=main.py
          echo "hello world!"
          flask run &
      - name: ls
        run: ls
      - name: Run Python tests
        id: test_outcome
        run: pytest

  docker_build_and_push:
    needs: running_tests
    if: ${{ needs.running_tests.outputs.tests_passed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./app
          push: true
          tags: lironderi/market-app:v1.0.${{ github.run_id }}
      - name: Clone project_conf repository
        run: |
          echo "Cloning the repository..."
          git clone https://github.com/danielsagie/project_conf
          echo "Setting up Git configuration..."
          git config --global user.email "danielsagie688@gmail.com"
          git config --global user.name "danielsagie"
      - name: Debugging remote URL
        run: |
          echo "Checking remote URL..."
          git remote -v
      - name: Trigger ArgoCD Sync
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "lets go"
          pwd
          cd project_conf
          sed -i "s|image: lironderi/market-app:v1.0.*|image: lironderi/market-app:v1.0.${{ github.run_id }}|" k8s_conf/deployment.yaml
          git add k8s_conf/deployment.yaml
          git commit -m "Trigger ArgoCD Sync"
          git push https://$GH_PAT@github.com/danielsagie/project_conf

  notify_on_test_failure:
    needs: running_tests
    if: ${{ needs.running_tests.outputs.tests_passed != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Send failure notification for tests
        uses: cinotify/github-action@main
        with:
          to: ${{ vars.EMAIL }}
          subject: Tests Failed
          body: One or more tests have failed, please check this on GitHub Actions.

  notify_on_workflow_failure:
    needs:
      - running_tests
      - docker_build_and_push
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Send failure notification for workflow
        uses: cinotify/github-action@main
        with:
          to: ${{ vars.EMAIL }}
          subject: Workflow failed
          body: The workflow failed, please check this on GitHub Actions.
          

  notify_image_change:
    needs:
      - running_tests
      - docker_build_and_push
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Send liron mail
        uses: cinotify/github-action@main
        with:
          to: liron.deri3@outlook.com
          subject: Version Changed
          body: new image has been uploaded. version number - v1.0.${{ github.run_id }}

